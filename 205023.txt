1.Aleksandar951
2.а https://github.com/settings/repositories па се менува името.
3. SI_2023_lab1_205023


4.Со командата mkdir SI_2023_lab1_205023 ce креира нов локален репозеториум. 
-Со командата cd SI_2023_lab1_205023 се влегува во него. 
-На крај се иницијализира со командата git init.

5.Со командата git remote add origin https://github.com/Aleksandar951/SI_2023_lab1_205023.git се поврзуваат локалниот и оддалечениот репозиториум.

6.Со командата echo Aleksandar Jakovheski 205023 >> README.md со оваа команда истовремено се креира датотеката и се додава текст во неа. 
-Потоа со командата git add . се поставува на stage датотеката  
-Со командата git commit -m "Initial commit" се прави commit со порака што е направено.

7. 6.Со командата echo >> SILab1.java со оваа команда се создава фајлот па потоа се пристапува во нејзе директно и се поставува кодот од линкот кој ни е даден. 
-Потоа со командата git add . се поставува на stage датотеката  
-Со командата git commit -m "Add java class" се прави commit со порака што е направено.

8.Со командата git push --all ги синхронизираме локалниот и оддалечениот репозеториум.

9.Со командите git branch bug1 , git branch bug2, git branch bug3 отвараме 3 гранки.

10.Со командата git checkout bug1 се префрламе од гранката master која е main или главна гранка на гранката bug1.

11.Се поправа грешката така што ќе го отвориме фајлот.
-Потоа со командата git add . се поставува на stage датотеката.
-Со командата git commit -m "Fix wrong loop for reading" се прави commit со порака што е направено.

12.Со командата git checkout bug2 се префрламе од гранката bug1 на гранката bug2.

13.Се поправа грешката така што ќе го отвориме фајлот.
-Потоа со командата git add . се поставува на stage датотеката.
-Со командата git commit -m "Fix wrong condition in filterOddNumbers" се прави commit со порака што е направено.

14.Со командата git checkout bug3 се префрламе од гранката bug2 на гранката bug3.

15.Се поправа грешката така што ќе го отвориме фајлот.
-Потоа со командата git add . се поставува на stage датотеката.
-Со командата git commit -m "Fix method sumEvenNumbers" се прави commit со порака што е направено.

16.Со синхронизираат како и предходно со командата git push --all.

17.Со помош на git checkout master се префрламе од гранката bug3 на гранката master.

18.Со командата git merge bug1 се спојува гранката bug1 кон гранката master(затоа предходно се префрламе од bug3 na master затоа што ако направиме merge без да се префрлимее на погрешно
 место ќе настане спојувањето).

19.git push --all синхронизација

20.git merge bug2 се спојува гранката bug2 кон гранката master.

21.git push --all синхринизација

22.потоа повторно се префрламе на гранката bug3 со командата git checkout bug3.

23.Со командата git rebase master, се прави rebase .

24.Потота одиме со git checkout master се префрламе на гранката master.

25.git merge bug3 се спојува гранката bug3 кон гранката master.

26.git push --all --force тука ги синхронизираме сите гранки на локалниот репозиториум со одалечениот репозиторим.


27.Со командата echo >> logs.txt  се креира logs датотеката.
-Потоа со git log го копираме нејзиниот излез и го поставуваме во датотеката logs.txt.
-Со командата echo >> 205023.txt се креира оваа датотека и се води евиденција и документација за спроведените команди.
-Потоа со командата git add . се stage-нуваат датотеките и со командата git commit -m "Final commit" се комитнува.

28.Со командата git push --all ги синхронизириаме локалното репо и оддалечениот репо.
